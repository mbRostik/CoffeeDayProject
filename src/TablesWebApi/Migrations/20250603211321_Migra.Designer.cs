// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TablesWebApi.DAL;

#nullable disable

namespace TablesWebApi.Migrations
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20250603211321_Migra")]
    partial class Migra
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TablesWebApi.DAL.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("EndTime")
                        .HasColumnType("time");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("StartTime")
                        .HasColumnType("time");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("TablesWebApi.DAL.ReservationContact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId")
                        .IsUnique();

                    b.ToTable("ReservationContacts");
                });

            modelBuilder.Entity("TablesWebApi.DAL.ReservationTableLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ReservationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TableId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.HasIndex("TableId");

                    b.ToTable("ReservationTableLinks");
                });

            modelBuilder.Entity("TablesWebApi.DAL.Table", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("MaxSeats")
                        .HasColumnType("int");

                    b.Property<int>("TableNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TableNumber")
                        .IsUnique();

                    b.ToTable("Tables");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-100000000001"),
                            MaxSeats = 2,
                            TableNumber = 1
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000001000001"),
                            MaxSeats = 2,
                            TableNumber = 2
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000003000002"),
                            MaxSeats = 4,
                            TableNumber = 3
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000020000002"),
                            MaxSeats = 4,
                            TableNumber = 4
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000003"),
                            MaxSeats = 6,
                            TableNumber = 5
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000700003"),
                            MaxSeats = 6,
                            TableNumber = 6
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000003000004"),
                            MaxSeats = 4,
                            TableNumber = 7
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000040000004"),
                            MaxSeats = 4,
                            TableNumber = 8
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000009"),
                            MaxSeats = 8,
                            TableNumber = 9
                        },
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000008000008"),
                            MaxSeats = 8,
                            TableNumber = 10
                        });
                });

            modelBuilder.Entity("TablesWebApi.DAL.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TablesWebApi.DAL.Reservation", b =>
                {
                    b.HasOne("TablesWebApi.DAL.User", "User")
                        .WithMany("Reservations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TablesWebApi.DAL.ReservationContact", b =>
                {
                    b.HasOne("TablesWebApi.DAL.Reservation", "Reservation")
                        .WithOne("Contact")
                        .HasForeignKey("TablesWebApi.DAL.ReservationContact", "ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TablesWebApi.DAL.ReservationTableLink", b =>
                {
                    b.HasOne("TablesWebApi.DAL.Reservation", "Reservation")
                        .WithMany("ReservationTableLinks")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TablesWebApi.DAL.Table", "Table")
                        .WithMany("ReservationTableLinks")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("TablesWebApi.DAL.Reservation", b =>
                {
                    b.Navigation("Contact")
                        .IsRequired();

                    b.Navigation("ReservationTableLinks");
                });

            modelBuilder.Entity("TablesWebApi.DAL.Table", b =>
                {
                    b.Navigation("ReservationTableLinks");
                });

            modelBuilder.Entity("TablesWebApi.DAL.User", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
